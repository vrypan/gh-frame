name: "Farcaster-friendly Repo Page"
description: "Creates a Farcaster-friendly static page from your README.md with automatic frame support"
author: "vrypan"

branding:
  icon: "book"
  color: "blue"

on:
  push:
    branches:
      - main
    paths:
      - "README.md"
  pull_request:
    branches:
      - main
    paths:
      - "README.md"
  workflow_dispatch:

inputs:
  token:
    description: "GitHub token for authentication"
    required: false
    default: "${{ github.token }}"
  cname:
    description: "Custom domain for GitHub Pages"
    required: false
  branch_name:
    description: "Branch name for GitHub Pages"
    required: false
    default: "gh-frame"
  style:
    description: "CSS style use to render the page: light/dark/custom"
    required: false
    default: "light"

permissions:
  contents: write
  pages: write
  id-token: write

runs:
  using: "composite"
  steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl git python3 python3-pip imagemagick
      shell: bash

    - name: Install Python dependencies
      run: |
        cd ${{ github.action_path }}
        python3 -m pip install -r requirements.txt
      shell: bash

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
      shell: bash

    - name: Create or switch to gh-frame branch
      run: |
        cd ${{ github.workspace }}
        # Try to fetch the branch first
        git fetch origin gh-frame || true

        # Check if branch exists locally or remotely
        if git rev-parse --verify gh-frame >/dev/null 2>&1 || git rev-parse --verify origin/gh-frame >/dev/null 2>&1; then
          # Branch exists, switch to it
          git checkout gh-frame 2>/dev/null || git checkout -b gh-frame origin/gh-frame
        else
          # Branch doesn't exist, create it
          git checkout --orphan gh-frame
          git reset --hard
          git commit --allow-empty -m "Initializing gh-frame branch"
          git push origin gh-frame
        fi
      shell: bash

    - name: Fetch README.md from main branch
      run: |
        cd ${{ github.workspace }}
        git fetch origin main:main
        git show main:README.md > README.md
      shell: bash

    - name: Get OG Image
      run: |
        cd ${{ github.workspace }}
        chmod +x ${{ github.action_path }}/generate-images.sh
        ${{ github.action_path }}/generate-images.sh
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        CNAME: ${{ inputs.cname }}
        BRANCH_NAME: ${{ inputs.branch_name }}
        GITHUB_REPOSITORY: ${{ github.repository }}

    - name: Generate static page
      run: |
        # Set up environment variables for the Python script
        export GITHUB_REPOSITORY=${{ github.repository }}
        export DOMAIN=${{ inputs.cname }}
        export BRANCH=${{ inputs.branch_name }}
        export GITHUB_TOKEN=${{ inputs.token }}
        cd ${{ github.workspace }}
        python3 ${{ github.action_path }}/main.py ./README.md ${{ github.action_path }}/templates
        if [ "${{ inputs.style }}" == "dark" ]; then
          echo "Using dark theme"
          cp ${{ github.action_path }}/templates/styles-dark.css ./styles.css
        fi
        if [ "${{ inputs.style }}" == "light" ]; then
          echo "Using light theme"
          cp ${{ github.action_path }}/templates/styles-light.css ./styles.css
        fi
        if [ -n "$DOMAIN" ]; then
          echo $DOMAIN > CNAME
        fi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        CNAME: ${{ inputs.cname }}
        BRANCH_NAME: ${{ inputs.branch_name }}

    - name: Commit generated files
      run: |
        cd ${{ github.workspace }}

        # Configure Git with the token
        git config --global url."https://x-access-token:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"

        # Only add files that exist
        for file in og-image.png splash-image.png index.html styles.css README.md; do
          if [ -f "$file" ]; then
            git add "$file"
          fi
        done

        # Add CNAME if it exists and is provided
        if [ -n "$CNAME" ] && [ -f "CNAME" ]; then
          git add CNAME
        fi

        # Only commit if there are changes
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update static page and images"
          git push origin gh-frame
        fi
      shell: bash
      env:
        CNAME: ${{ inputs.cname }}
        GITHUB_TOKEN: ${{ inputs.token }}
